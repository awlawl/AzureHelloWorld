//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace AzurePaasTest.FBD {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FBDWSSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaskBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MediaExistsInBIMResult[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BIMKill[]))]
    public partial class FBDWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback VersionPingOperationCompleted;
        
        private System.Threading.SendOrPostCallback MediaExistsInBIMOperationCompleted;
        
        private System.Threading.SendOrPostCallback MediaExistsInBIM1OperationCompleted;
        
        private System.Threading.SendOrPostCallback IngestRecordExistsInBIMOperationCompleted;
        
        private System.Threading.SendOrPostCallback CQCIngestRecordExistsInBIMOperationCompleted;
        
        private System.Threading.SendOrPostCallback MediaExistsInBIM2OperationCompleted;
        
        private System.Threading.SendOrPostCallback MediaExistsInBIM3OperationCompleted;
        
        private System.Threading.SendOrPostCallback MediaExistsInBIM4OperationCompleted;
        
        private System.Threading.SendOrPostCallback MediaExistsInBIM5OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediaExistsInBIMResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback MediaKilledInBIMOperationCompleted;
        
        private System.Threading.SendOrPostCallback MediaKilledInBIM1OperationCompleted;
        
        private System.Threading.SendOrPostCallback MediaKilledInBIM2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediaKilledInBIMResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback MediaKilledInBIMStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediaInfoFromPodsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAsRunsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAsRunEventsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAsRunEvents1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAsRunEvents2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAsRunEvents3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAsRunEvents4OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAsRunEvents5OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCCFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCCEventsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCCEvents1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemsIngestedIntoBIMOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInstancesIngestedIntoBIMOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInstancesIngestedIntoBIM1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInstancesIngestedIntoBIMNoFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback SystemCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBIMRecordByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBIMRecordByMaterialIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBIMRecordByMaterialIdsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FBDWS() {
            this.Url = global::AzurePaasTest.Properties.Settings.Default.AzurePaasTest_FBD_FBDWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event VersionPingCompletedEventHandler VersionPingCompleted;
        
        /// <remarks/>
        public event MediaExistsInBIMCompletedEventHandler MediaExistsInBIMCompleted;
        
        /// <remarks/>
        public event MediaExistsInBIM1CompletedEventHandler MediaExistsInBIM1Completed;
        
        /// <remarks/>
        public event IngestRecordExistsInBIMCompletedEventHandler IngestRecordExistsInBIMCompleted;
        
        /// <remarks/>
        public event CQCIngestRecordExistsInBIMCompletedEventHandler CQCIngestRecordExistsInBIMCompleted;
        
        /// <remarks/>
        public event MediaExistsInBIM2CompletedEventHandler MediaExistsInBIM2Completed;
        
        /// <remarks/>
        public event MediaExistsInBIM3CompletedEventHandler MediaExistsInBIM3Completed;
        
        /// <remarks/>
        public event MediaExistsInBIM4CompletedEventHandler MediaExistsInBIM4Completed;
        
        /// <remarks/>
        public event MediaExistsInBIM5CompletedEventHandler MediaExistsInBIM5Completed;
        
        /// <remarks/>
        public event GetMediaExistsInBIMResultCompletedEventHandler GetMediaExistsInBIMResultCompleted;
        
        /// <remarks/>
        public event MediaKilledInBIMCompletedEventHandler MediaKilledInBIMCompleted;
        
        /// <remarks/>
        public event MediaKilledInBIM1CompletedEventHandler MediaKilledInBIM1Completed;
        
        /// <remarks/>
        public event MediaKilledInBIM2CompletedEventHandler MediaKilledInBIM2Completed;
        
        /// <remarks/>
        public event GetMediaKilledInBIMResultCompletedEventHandler GetMediaKilledInBIMResultCompleted;
        
        /// <remarks/>
        public event MediaKilledInBIMStatusCompletedEventHandler MediaKilledInBIMStatusCompleted;
        
        /// <remarks/>
        public event GetMediaInfoFromPodsCompletedEventHandler GetMediaInfoFromPodsCompleted;
        
        /// <remarks/>
        public event GetAsRunsCompletedEventHandler GetAsRunsCompleted;
        
        /// <remarks/>
        public event GetAsRunEventsCompletedEventHandler GetAsRunEventsCompleted;
        
        /// <remarks/>
        public event GetAsRunEvents1CompletedEventHandler GetAsRunEvents1Completed;
        
        /// <remarks/>
        public event GetAsRunEvents2CompletedEventHandler GetAsRunEvents2Completed;
        
        /// <remarks/>
        public event GetAsRunEvents3CompletedEventHandler GetAsRunEvents3Completed;
        
        /// <remarks/>
        public event GetAsRunEvents4CompletedEventHandler GetAsRunEvents4Completed;
        
        /// <remarks/>
        public event GetAsRunEvents5CompletedEventHandler GetAsRunEvents5Completed;
        
        /// <remarks/>
        public event GetCCFilesCompletedEventHandler GetCCFilesCompleted;
        
        /// <remarks/>
        public event GetCCEventsCompletedEventHandler GetCCEventsCompleted;
        
        /// <remarks/>
        public event GetCCEvents1CompletedEventHandler GetCCEvents1Completed;
        
        /// <remarks/>
        public event GetItemsIngestedIntoBIMCompletedEventHandler GetItemsIngestedIntoBIMCompleted;
        
        /// <remarks/>
        public event GetInstancesIngestedIntoBIMCompletedEventHandler GetInstancesIngestedIntoBIMCompleted;
        
        /// <remarks/>
        public event GetInstancesIngestedIntoBIM1CompletedEventHandler GetInstancesIngestedIntoBIM1Completed;
        
        /// <remarks/>
        public event GetInstancesIngestedIntoBIMNoFilterCompletedEventHandler GetInstancesIngestedIntoBIMNoFilterCompleted;
        
        /// <remarks/>
        public event SystemCheckCompletedEventHandler SystemCheckCompleted;
        
        /// <remarks/>
        public event GetBIMRecordByDateCompletedEventHandler GetBIMRecordByDateCompleted;
        
        /// <remarks/>
        public event GetBIMRecordByMaterialIdCompletedEventHandler GetBIMRecordByMaterialIdCompleted;
        
        /// <remarks/>
        public event GetBIMRecordByMaterialIdsCompletedEventHandler GetBIMRecordByMaterialIdsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VersionPing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VersionPing() {
            object[] results = this.Invoke("VersionPing", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VersionPingAsync() {
            this.VersionPingAsync(null);
        }
        
        /// <remarks/>
        public void VersionPingAsync(object userState) {
            if ((this.VersionPingOperationCompleted == null)) {
                this.VersionPingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVersionPingOperationCompleted);
            }
            this.InvokeAsync("VersionPing", new object[0], this.VersionPingOperationCompleted, userState);
        }
        
        private void OnVersionPingOperationCompleted(object arg) {
            if ((this.VersionPingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VersionPingCompleted(this, new VersionPingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MediaExistsInBIM-Direct", RequestElementName="MediaExistsInBIM-Direct", RequestNamespace="http://tempuri.org/", ResponseElementName="MediaExistsInBIM-DirectResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("MediaExistsInBIM-DirectResult")]
        public MediaExistsInBIMResult MediaExistsInBIM(string materialId) {
            object[] results = this.Invoke("MediaExistsInBIM", new object[] {
                        materialId});
            return ((MediaExistsInBIMResult)(results[0]));
        }
        
        /// <remarks/>
        public void MediaExistsInBIMAsync(string materialId) {
            this.MediaExistsInBIMAsync(materialId, null);
        }
        
        /// <remarks/>
        public void MediaExistsInBIMAsync(string materialId, object userState) {
            if ((this.MediaExistsInBIMOperationCompleted == null)) {
                this.MediaExistsInBIMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMediaExistsInBIMOperationCompleted);
            }
            this.InvokeAsync("MediaExistsInBIM", new object[] {
                        materialId}, this.MediaExistsInBIMOperationCompleted, userState);
        }
        
        private void OnMediaExistsInBIMOperationCompleted(object arg) {
            if ((this.MediaExistsInBIMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MediaExistsInBIMCompleted(this, new MediaExistsInBIMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="MediaExistsInBIM1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MediaExistsInBIM-Multi-Direct", RequestElementName="MediaExistsInBIM-Multi-Direct", RequestNamespace="http://tempuri.org/", ResponseElementName="MediaExistsInBIM-Multi-DirectResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("MediaExistsInBIM-Multi-DirectResult")]
        public MediaExistsInBIMResult[] MediaExistsInBIM(string[] materialIds) {
            object[] results = this.Invoke("MediaExistsInBIM1", new object[] {
                        materialIds});
            return ((MediaExistsInBIMResult[])(results[0]));
        }
        
        /// <remarks/>
        public void MediaExistsInBIM1Async(string[] materialIds) {
            this.MediaExistsInBIM1Async(materialIds, null);
        }
        
        /// <remarks/>
        public void MediaExistsInBIM1Async(string[] materialIds, object userState) {
            if ((this.MediaExistsInBIM1OperationCompleted == null)) {
                this.MediaExistsInBIM1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMediaExistsInBIM1OperationCompleted);
            }
            this.InvokeAsync("MediaExistsInBIM1", new object[] {
                        materialIds}, this.MediaExistsInBIM1OperationCompleted, userState);
        }
        
        private void OnMediaExistsInBIM1OperationCompleted(object arg) {
            if ((this.MediaExistsInBIM1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MediaExistsInBIM1Completed(this, new MediaExistsInBIM1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IngestRecordExistsInBIM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IngestRecordExistsInBIMResult[] IngestRecordExistsInBIM(string[] materialIds) {
            object[] results = this.Invoke("IngestRecordExistsInBIM", new object[] {
                        materialIds});
            return ((IngestRecordExistsInBIMResult[])(results[0]));
        }
        
        /// <remarks/>
        public void IngestRecordExistsInBIMAsync(string[] materialIds) {
            this.IngestRecordExistsInBIMAsync(materialIds, null);
        }
        
        /// <remarks/>
        public void IngestRecordExistsInBIMAsync(string[] materialIds, object userState) {
            if ((this.IngestRecordExistsInBIMOperationCompleted == null)) {
                this.IngestRecordExistsInBIMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIngestRecordExistsInBIMOperationCompleted);
            }
            this.InvokeAsync("IngestRecordExistsInBIM", new object[] {
                        materialIds}, this.IngestRecordExistsInBIMOperationCompleted, userState);
        }
        
        private void OnIngestRecordExistsInBIMOperationCompleted(object arg) {
            if ((this.IngestRecordExistsInBIMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IngestRecordExistsInBIMCompleted(this, new IngestRecordExistsInBIMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CQCIngestRecordExistsInBIM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CQCIngestRecordExistsInBIMResult[] CQCIngestRecordExistsInBIM(string[] materialIds) {
            object[] results = this.Invoke("CQCIngestRecordExistsInBIM", new object[] {
                        materialIds});
            return ((CQCIngestRecordExistsInBIMResult[])(results[0]));
        }
        
        /// <remarks/>
        public void CQCIngestRecordExistsInBIMAsync(string[] materialIds) {
            this.CQCIngestRecordExistsInBIMAsync(materialIds, null);
        }
        
        /// <remarks/>
        public void CQCIngestRecordExistsInBIMAsync(string[] materialIds, object userState) {
            if ((this.CQCIngestRecordExistsInBIMOperationCompleted == null)) {
                this.CQCIngestRecordExistsInBIMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCQCIngestRecordExistsInBIMOperationCompleted);
            }
            this.InvokeAsync("CQCIngestRecordExistsInBIM", new object[] {
                        materialIds}, this.CQCIngestRecordExistsInBIMOperationCompleted, userState);
        }
        
        private void OnCQCIngestRecordExistsInBIMOperationCompleted(object arg) {
            if ((this.CQCIngestRecordExistsInBIMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CQCIngestRecordExistsInBIMCompleted(this, new CQCIngestRecordExistsInBIMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="MediaExistsInBIM2")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MediaExistsInBIM-Multi-Scheduled", RequestElementName="MediaExistsInBIM-Multi-Scheduled", RequestNamespace="http://tempuri.org/", ResponseElementName="MediaExistsInBIM-Multi-ScheduledResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("MediaExistsInBIM-Multi-ScheduledResult")]
        public int MediaExistsInBIM(string systemName, string contextData, string[] materialId, bool isScheduled) {
            object[] results = this.Invoke("MediaExistsInBIM2", new object[] {
                        systemName,
                        contextData,
                        materialId,
                        isScheduled});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void MediaExistsInBIM2Async(string systemName, string contextData, string[] materialId, bool isScheduled) {
            this.MediaExistsInBIM2Async(systemName, contextData, materialId, isScheduled, null);
        }
        
        /// <remarks/>
        public void MediaExistsInBIM2Async(string systemName, string contextData, string[] materialId, bool isScheduled, object userState) {
            if ((this.MediaExistsInBIM2OperationCompleted == null)) {
                this.MediaExistsInBIM2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMediaExistsInBIM2OperationCompleted);
            }
            this.InvokeAsync("MediaExistsInBIM2", new object[] {
                        systemName,
                        contextData,
                        materialId,
                        isScheduled}, this.MediaExistsInBIM2OperationCompleted, userState);
        }
        
        private void OnMediaExistsInBIM2OperationCompleted(object arg) {
            if ((this.MediaExistsInBIM2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MediaExistsInBIM2Completed(this, new MediaExistsInBIM2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="MediaExistsInBIM3")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MediaExistsInBIM-Scheduled", RequestElementName="MediaExistsInBIM-Scheduled", RequestNamespace="http://tempuri.org/", ResponseElementName="MediaExistsInBIM-ScheduledResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("MediaExistsInBIM-ScheduledResult")]
        public int MediaExistsInBIM(string systemName, string contextData, string materialId, bool isScheduled) {
            object[] results = this.Invoke("MediaExistsInBIM3", new object[] {
                        systemName,
                        contextData,
                        materialId,
                        isScheduled});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void MediaExistsInBIM3Async(string systemName, string contextData, string materialId, bool isScheduled) {
            this.MediaExistsInBIM3Async(systemName, contextData, materialId, isScheduled, null);
        }
        
        /// <remarks/>
        public void MediaExistsInBIM3Async(string systemName, string contextData, string materialId, bool isScheduled, object userState) {
            if ((this.MediaExistsInBIM3OperationCompleted == null)) {
                this.MediaExistsInBIM3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMediaExistsInBIM3OperationCompleted);
            }
            this.InvokeAsync("MediaExistsInBIM3", new object[] {
                        systemName,
                        contextData,
                        materialId,
                        isScheduled}, this.MediaExistsInBIM3OperationCompleted, userState);
        }
        
        private void OnMediaExistsInBIM3OperationCompleted(object arg) {
            if ((this.MediaExistsInBIM3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MediaExistsInBIM3Completed(this, new MediaExistsInBIM3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="MediaExistsInBIM4")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MediaExistsInBIM-Multi", RequestElementName="MediaExistsInBIM-Multi", RequestNamespace="http://tempuri.org/", ResponseElementName="MediaExistsInBIM-MultiResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("MediaExistsInBIM-MultiResult")]
        public int MediaExistsInBIM(string systemName, string contextData, string[] materialId) {
            object[] results = this.Invoke("MediaExistsInBIM4", new object[] {
                        systemName,
                        contextData,
                        materialId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void MediaExistsInBIM4Async(string systemName, string contextData, string[] materialId) {
            this.MediaExistsInBIM4Async(systemName, contextData, materialId, null);
        }
        
        /// <remarks/>
        public void MediaExistsInBIM4Async(string systemName, string contextData, string[] materialId, object userState) {
            if ((this.MediaExistsInBIM4OperationCompleted == null)) {
                this.MediaExistsInBIM4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMediaExistsInBIM4OperationCompleted);
            }
            this.InvokeAsync("MediaExistsInBIM4", new object[] {
                        systemName,
                        contextData,
                        materialId}, this.MediaExistsInBIM4OperationCompleted, userState);
        }
        
        private void OnMediaExistsInBIM4OperationCompleted(object arg) {
            if ((this.MediaExistsInBIM4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MediaExistsInBIM4Completed(this, new MediaExistsInBIM4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="MediaExistsInBIM5")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MediaExistsInBIM", RequestElementName="MediaExistsInBIM", RequestNamespace="http://tempuri.org/", ResponseElementName="MediaExistsInBIMResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("MediaExistsInBIMResult")]
        public int MediaExistsInBIM(string systemName, string contextData, string materialId) {
            object[] results = this.Invoke("MediaExistsInBIM5", new object[] {
                        systemName,
                        contextData,
                        materialId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void MediaExistsInBIM5Async(string systemName, string contextData, string materialId) {
            this.MediaExistsInBIM5Async(systemName, contextData, materialId, null);
        }
        
        /// <remarks/>
        public void MediaExistsInBIM5Async(string systemName, string contextData, string materialId, object userState) {
            if ((this.MediaExistsInBIM5OperationCompleted == null)) {
                this.MediaExistsInBIM5OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMediaExistsInBIM5OperationCompleted);
            }
            this.InvokeAsync("MediaExistsInBIM5", new object[] {
                        systemName,
                        contextData,
                        materialId}, this.MediaExistsInBIM5OperationCompleted, userState);
        }
        
        private void OnMediaExistsInBIM5OperationCompleted(object arg) {
            if ((this.MediaExistsInBIM5Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MediaExistsInBIM5Completed(this, new MediaExistsInBIM5CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMediaExistsInBIMResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaExistsInBIMServiceResult GetMediaExistsInBIMResult(int taskId) {
            object[] results = this.Invoke("GetMediaExistsInBIMResult", new object[] {
                        taskId});
            return ((MediaExistsInBIMServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediaExistsInBIMResultAsync(int taskId) {
            this.GetMediaExistsInBIMResultAsync(taskId, null);
        }
        
        /// <remarks/>
        public void GetMediaExistsInBIMResultAsync(int taskId, object userState) {
            if ((this.GetMediaExistsInBIMResultOperationCompleted == null)) {
                this.GetMediaExistsInBIMResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediaExistsInBIMResultOperationCompleted);
            }
            this.InvokeAsync("GetMediaExistsInBIMResult", new object[] {
                        taskId}, this.GetMediaExistsInBIMResultOperationCompleted, userState);
        }
        
        private void OnGetMediaExistsInBIMResultOperationCompleted(object arg) {
            if ((this.GetMediaExistsInBIMResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediaExistsInBIMResultCompleted(this, new GetMediaExistsInBIMResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MediaKilledInBIM-Scheduled", RequestElementName="MediaKilledInBIM-Scheduled", RequestNamespace="http://tempuri.org/", ResponseElementName="MediaKilledInBIM-ScheduledResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("MediaKilledInBIM-ScheduledResult")]
        public int MediaKilledInBIM(string systemName, string contextData, string materialId, System.DateTime requestedOn, bool isScheduled) {
            object[] results = this.Invoke("MediaKilledInBIM", new object[] {
                        systemName,
                        contextData,
                        materialId,
                        requestedOn,
                        isScheduled});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void MediaKilledInBIMAsync(string systemName, string contextData, string materialId, System.DateTime requestedOn, bool isScheduled) {
            this.MediaKilledInBIMAsync(systemName, contextData, materialId, requestedOn, isScheduled, null);
        }
        
        /// <remarks/>
        public void MediaKilledInBIMAsync(string systemName, string contextData, string materialId, System.DateTime requestedOn, bool isScheduled, object userState) {
            if ((this.MediaKilledInBIMOperationCompleted == null)) {
                this.MediaKilledInBIMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMediaKilledInBIMOperationCompleted);
            }
            this.InvokeAsync("MediaKilledInBIM", new object[] {
                        systemName,
                        contextData,
                        materialId,
                        requestedOn,
                        isScheduled}, this.MediaKilledInBIMOperationCompleted, userState);
        }
        
        private void OnMediaKilledInBIMOperationCompleted(object arg) {
            if ((this.MediaKilledInBIMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MediaKilledInBIMCompleted(this, new MediaKilledInBIMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="MediaKilledInBIM1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MediaKilledInBIM-Multiple", RequestElementName="MediaKilledInBIM-Multiple", RequestNamespace="http://tempuri.org/", ResponseElementName="MediaKilledInBIM-MultipleResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("MediaKilledInBIM-MultipleResult")]
        public int MediaKilledInBIM(string systemName, string contextData, string[] materialId, System.DateTime requestedOn) {
            object[] results = this.Invoke("MediaKilledInBIM1", new object[] {
                        systemName,
                        contextData,
                        materialId,
                        requestedOn});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void MediaKilledInBIM1Async(string systemName, string contextData, string[] materialId, System.DateTime requestedOn) {
            this.MediaKilledInBIM1Async(systemName, contextData, materialId, requestedOn, null);
        }
        
        /// <remarks/>
        public void MediaKilledInBIM1Async(string systemName, string contextData, string[] materialId, System.DateTime requestedOn, object userState) {
            if ((this.MediaKilledInBIM1OperationCompleted == null)) {
                this.MediaKilledInBIM1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMediaKilledInBIM1OperationCompleted);
            }
            this.InvokeAsync("MediaKilledInBIM1", new object[] {
                        systemName,
                        contextData,
                        materialId,
                        requestedOn}, this.MediaKilledInBIM1OperationCompleted, userState);
        }
        
        private void OnMediaKilledInBIM1OperationCompleted(object arg) {
            if ((this.MediaKilledInBIM1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MediaKilledInBIM1Completed(this, new MediaKilledInBIM1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="MediaKilledInBIM2")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MediaKilledInBIM-Single", RequestElementName="MediaKilledInBIM-Single", RequestNamespace="http://tempuri.org/", ResponseElementName="MediaKilledInBIM-SingleResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("MediaKilledInBIM-SingleResult")]
        public int MediaKilledInBIM(string systemName, string contextData, string materialId, System.DateTime requestedOn) {
            object[] results = this.Invoke("MediaKilledInBIM2", new object[] {
                        systemName,
                        contextData,
                        materialId,
                        requestedOn});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void MediaKilledInBIM2Async(string systemName, string contextData, string materialId, System.DateTime requestedOn) {
            this.MediaKilledInBIM2Async(systemName, contextData, materialId, requestedOn, null);
        }
        
        /// <remarks/>
        public void MediaKilledInBIM2Async(string systemName, string contextData, string materialId, System.DateTime requestedOn, object userState) {
            if ((this.MediaKilledInBIM2OperationCompleted == null)) {
                this.MediaKilledInBIM2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMediaKilledInBIM2OperationCompleted);
            }
            this.InvokeAsync("MediaKilledInBIM2", new object[] {
                        systemName,
                        contextData,
                        materialId,
                        requestedOn}, this.MediaKilledInBIM2OperationCompleted, userState);
        }
        
        private void OnMediaKilledInBIM2OperationCompleted(object arg) {
            if ((this.MediaKilledInBIM2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MediaKilledInBIM2Completed(this, new MediaKilledInBIM2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMediaKilledInBIMResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaKilledInBIMServiceResult GetMediaKilledInBIMResult(int taskId) {
            object[] results = this.Invoke("GetMediaKilledInBIMResult", new object[] {
                        taskId});
            return ((MediaKilledInBIMServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediaKilledInBIMResultAsync(int taskId) {
            this.GetMediaKilledInBIMResultAsync(taskId, null);
        }
        
        /// <remarks/>
        public void GetMediaKilledInBIMResultAsync(int taskId, object userState) {
            if ((this.GetMediaKilledInBIMResultOperationCompleted == null)) {
                this.GetMediaKilledInBIMResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediaKilledInBIMResultOperationCompleted);
            }
            this.InvokeAsync("GetMediaKilledInBIMResult", new object[] {
                        taskId}, this.GetMediaKilledInBIMResultOperationCompleted, userState);
        }
        
        private void OnGetMediaKilledInBIMResultOperationCompleted(object arg) {
            if ((this.GetMediaKilledInBIMResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediaKilledInBIMResultCompleted(this, new GetMediaKilledInBIMResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MediaKilledInBIMStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BIMKill[] MediaKilledInBIMStatus(string[] materialIds, System.DateTime requestedOn) {
            object[] results = this.Invoke("MediaKilledInBIMStatus", new object[] {
                        materialIds,
                        requestedOn});
            return ((BIMKill[])(results[0]));
        }
        
        /// <remarks/>
        public void MediaKilledInBIMStatusAsync(string[] materialIds, System.DateTime requestedOn) {
            this.MediaKilledInBIMStatusAsync(materialIds, requestedOn, null);
        }
        
        /// <remarks/>
        public void MediaKilledInBIMStatusAsync(string[] materialIds, System.DateTime requestedOn, object userState) {
            if ((this.MediaKilledInBIMStatusOperationCompleted == null)) {
                this.MediaKilledInBIMStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMediaKilledInBIMStatusOperationCompleted);
            }
            this.InvokeAsync("MediaKilledInBIMStatus", new object[] {
                        materialIds,
                        requestedOn}, this.MediaKilledInBIMStatusOperationCompleted, userState);
        }
        
        private void OnMediaKilledInBIMStatusOperationCompleted(object arg) {
            if ((this.MediaKilledInBIMStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MediaKilledInBIMStatusCompleted(this, new MediaKilledInBIMStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMediaInfoFromPods", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageSet[] GetMediaInfoFromPods(string[] contentIDs) {
            object[] results = this.Invoke("GetMediaInfoFromPods", new object[] {
                        contentIDs});
            return ((MessageSet[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMediaInfoFromPodsAsync(string[] contentIDs) {
            this.GetMediaInfoFromPodsAsync(contentIDs, null);
        }
        
        /// <remarks/>
        public void GetMediaInfoFromPodsAsync(string[] contentIDs, object userState) {
            if ((this.GetMediaInfoFromPodsOperationCompleted == null)) {
                this.GetMediaInfoFromPodsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediaInfoFromPodsOperationCompleted);
            }
            this.InvokeAsync("GetMediaInfoFromPods", new object[] {
                        contentIDs}, this.GetMediaInfoFromPodsOperationCompleted, userState);
        }
        
        private void OnGetMediaInfoFromPodsOperationCompleted(object arg) {
            if ((this.GetMediaInfoFromPodsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediaInfoFromPodsCompleted(this, new GetMediaInfoFromPodsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAsRuns", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AsRun[] GetAsRuns(string network, string feed, System.DateTime eventStartDateTime, System.DateTime eventEndDateTime, bool includeAsRunEvents) {
            object[] results = this.Invoke("GetAsRuns", new object[] {
                        network,
                        feed,
                        eventStartDateTime,
                        eventEndDateTime,
                        includeAsRunEvents});
            return ((AsRun[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAsRunsAsync(string network, string feed, System.DateTime eventStartDateTime, System.DateTime eventEndDateTime, bool includeAsRunEvents) {
            this.GetAsRunsAsync(network, feed, eventStartDateTime, eventEndDateTime, includeAsRunEvents, null);
        }
        
        /// <remarks/>
        public void GetAsRunsAsync(string network, string feed, System.DateTime eventStartDateTime, System.DateTime eventEndDateTime, bool includeAsRunEvents, object userState) {
            if ((this.GetAsRunsOperationCompleted == null)) {
                this.GetAsRunsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAsRunsOperationCompleted);
            }
            this.InvokeAsync("GetAsRuns", new object[] {
                        network,
                        feed,
                        eventStartDateTime,
                        eventEndDateTime,
                        includeAsRunEvents}, this.GetAsRunsOperationCompleted, userState);
        }
        
        private void OnGetAsRunsOperationCompleted(object arg) {
            if ((this.GetAsRunsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAsRunsCompleted(this, new GetAsRunsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAsRunEventsRangeMaterialTypes", RequestElementName="GetAsRunEventsRangeMaterialTypes", RequestNamespace="http://tempuri.org/", ResponseElementName="GetAsRunEventsRangeMaterialTypesResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetAsRunEventsRangeMaterialTypesResult")]
        public AsRunEvent[] GetAsRunEvents(string network, string feed, System.DateTime eventStartDateTime, System.DateTime eventEndDateTime, AsRunEventMaterialType[] materialTypes) {
            object[] results = this.Invoke("GetAsRunEvents", new object[] {
                        network,
                        feed,
                        eventStartDateTime,
                        eventEndDateTime,
                        materialTypes});
            return ((AsRunEvent[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAsRunEventsAsync(string network, string feed, System.DateTime eventStartDateTime, System.DateTime eventEndDateTime, AsRunEventMaterialType[] materialTypes) {
            this.GetAsRunEventsAsync(network, feed, eventStartDateTime, eventEndDateTime, materialTypes, null);
        }
        
        /// <remarks/>
        public void GetAsRunEventsAsync(string network, string feed, System.DateTime eventStartDateTime, System.DateTime eventEndDateTime, AsRunEventMaterialType[] materialTypes, object userState) {
            if ((this.GetAsRunEventsOperationCompleted == null)) {
                this.GetAsRunEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAsRunEventsOperationCompleted);
            }
            this.InvokeAsync("GetAsRunEvents", new object[] {
                        network,
                        feed,
                        eventStartDateTime,
                        eventEndDateTime,
                        materialTypes}, this.GetAsRunEventsOperationCompleted, userState);
        }
        
        private void OnGetAsRunEventsOperationCompleted(object arg) {
            if ((this.GetAsRunEventsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAsRunEventsCompleted(this, new GetAsRunEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetAsRunEvents1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAsRunEventsRangeMaterialType", RequestElementName="GetAsRunEventsRangeMaterialType", RequestNamespace="http://tempuri.org/", ResponseElementName="GetAsRunEventsRangeMaterialTypeResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetAsRunEventsRangeMaterialTypeResult")]
        public AsRunEvent[] GetAsRunEvents(string network, string feed, System.DateTime eventStartDateTime, System.DateTime eventEndDateTime, AsRunEventMaterialType materialType) {
            object[] results = this.Invoke("GetAsRunEvents1", new object[] {
                        network,
                        feed,
                        eventStartDateTime,
                        eventEndDateTime,
                        materialType});
            return ((AsRunEvent[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAsRunEvents1Async(string network, string feed, System.DateTime eventStartDateTime, System.DateTime eventEndDateTime, AsRunEventMaterialType materialType) {
            this.GetAsRunEvents1Async(network, feed, eventStartDateTime, eventEndDateTime, materialType, null);
        }
        
        /// <remarks/>
        public void GetAsRunEvents1Async(string network, string feed, System.DateTime eventStartDateTime, System.DateTime eventEndDateTime, AsRunEventMaterialType materialType, object userState) {
            if ((this.GetAsRunEvents1OperationCompleted == null)) {
                this.GetAsRunEvents1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAsRunEvents1OperationCompleted);
            }
            this.InvokeAsync("GetAsRunEvents1", new object[] {
                        network,
                        feed,
                        eventStartDateTime,
                        eventEndDateTime,
                        materialType}, this.GetAsRunEvents1OperationCompleted, userState);
        }
        
        private void OnGetAsRunEvents1OperationCompleted(object arg) {
            if ((this.GetAsRunEvents1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAsRunEvents1Completed(this, new GetAsRunEvents1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetAsRunEvents2")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAsRunEventsRange", RequestElementName="GetAsRunEventsRange", RequestNamespace="http://tempuri.org/", ResponseElementName="GetAsRunEventsRangeResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetAsRunEventsRangeResult")]
        public AsRunEvent[] GetAsRunEvents(string network, string feed, System.DateTime eventStartDateTime, System.DateTime eventEndDateTime) {
            object[] results = this.Invoke("GetAsRunEvents2", new object[] {
                        network,
                        feed,
                        eventStartDateTime,
                        eventEndDateTime});
            return ((AsRunEvent[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAsRunEvents2Async(string network, string feed, System.DateTime eventStartDateTime, System.DateTime eventEndDateTime) {
            this.GetAsRunEvents2Async(network, feed, eventStartDateTime, eventEndDateTime, null);
        }
        
        /// <remarks/>
        public void GetAsRunEvents2Async(string network, string feed, System.DateTime eventStartDateTime, System.DateTime eventEndDateTime, object userState) {
            if ((this.GetAsRunEvents2OperationCompleted == null)) {
                this.GetAsRunEvents2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAsRunEvents2OperationCompleted);
            }
            this.InvokeAsync("GetAsRunEvents2", new object[] {
                        network,
                        feed,
                        eventStartDateTime,
                        eventEndDateTime}, this.GetAsRunEvents2OperationCompleted, userState);
        }
        
        private void OnGetAsRunEvents2OperationCompleted(object arg) {
            if ((this.GetAsRunEvents2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAsRunEvents2Completed(this, new GetAsRunEvents2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetAsRunEvents3")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAsRunEventsMaterialTypes", RequestElementName="GetAsRunEventsMaterialTypes", RequestNamespace="http://tempuri.org/", ResponseElementName="GetAsRunEventsMaterialTypesResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetAsRunEventsMaterialTypesResult")]
        public AsRunEvent[] GetAsRunEvents(string network, string feed, System.DateTime eventDate, AsRunEventMaterialType[] materialTypes) {
            object[] results = this.Invoke("GetAsRunEvents3", new object[] {
                        network,
                        feed,
                        eventDate,
                        materialTypes});
            return ((AsRunEvent[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAsRunEvents3Async(string network, string feed, System.DateTime eventDate, AsRunEventMaterialType[] materialTypes) {
            this.GetAsRunEvents3Async(network, feed, eventDate, materialTypes, null);
        }
        
        /// <remarks/>
        public void GetAsRunEvents3Async(string network, string feed, System.DateTime eventDate, AsRunEventMaterialType[] materialTypes, object userState) {
            if ((this.GetAsRunEvents3OperationCompleted == null)) {
                this.GetAsRunEvents3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAsRunEvents3OperationCompleted);
            }
            this.InvokeAsync("GetAsRunEvents3", new object[] {
                        network,
                        feed,
                        eventDate,
                        materialTypes}, this.GetAsRunEvents3OperationCompleted, userState);
        }
        
        private void OnGetAsRunEvents3OperationCompleted(object arg) {
            if ((this.GetAsRunEvents3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAsRunEvents3Completed(this, new GetAsRunEvents3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetAsRunEvents4")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAsRunEventsMaterialType", RequestElementName="GetAsRunEventsMaterialType", RequestNamespace="http://tempuri.org/", ResponseElementName="GetAsRunEventsMaterialTypeResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetAsRunEventsMaterialTypeResult")]
        public AsRunEvent[] GetAsRunEvents(string network, string feed, System.DateTime eventDate, AsRunEventMaterialType materialType) {
            object[] results = this.Invoke("GetAsRunEvents4", new object[] {
                        network,
                        feed,
                        eventDate,
                        materialType});
            return ((AsRunEvent[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAsRunEvents4Async(string network, string feed, System.DateTime eventDate, AsRunEventMaterialType materialType) {
            this.GetAsRunEvents4Async(network, feed, eventDate, materialType, null);
        }
        
        /// <remarks/>
        public void GetAsRunEvents4Async(string network, string feed, System.DateTime eventDate, AsRunEventMaterialType materialType, object userState) {
            if ((this.GetAsRunEvents4OperationCompleted == null)) {
                this.GetAsRunEvents4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAsRunEvents4OperationCompleted);
            }
            this.InvokeAsync("GetAsRunEvents4", new object[] {
                        network,
                        feed,
                        eventDate,
                        materialType}, this.GetAsRunEvents4OperationCompleted, userState);
        }
        
        private void OnGetAsRunEvents4OperationCompleted(object arg) {
            if ((this.GetAsRunEvents4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAsRunEvents4Completed(this, new GetAsRunEvents4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetAsRunEvents5")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAsRunEvents", RequestElementName="GetAsRunEvents", RequestNamespace="http://tempuri.org/", ResponseElementName="GetAsRunEventsResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetAsRunEventsResult")]
        public AsRunEvent[] GetAsRunEvents(string network, string feed, System.DateTime eventDate) {
            object[] results = this.Invoke("GetAsRunEvents5", new object[] {
                        network,
                        feed,
                        eventDate});
            return ((AsRunEvent[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAsRunEvents5Async(string network, string feed, System.DateTime eventDate) {
            this.GetAsRunEvents5Async(network, feed, eventDate, null);
        }
        
        /// <remarks/>
        public void GetAsRunEvents5Async(string network, string feed, System.DateTime eventDate, object userState) {
            if ((this.GetAsRunEvents5OperationCompleted == null)) {
                this.GetAsRunEvents5OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAsRunEvents5OperationCompleted);
            }
            this.InvokeAsync("GetAsRunEvents5", new object[] {
                        network,
                        feed,
                        eventDate}, this.GetAsRunEvents5OperationCompleted, userState);
        }
        
        private void OnGetAsRunEvents5OperationCompleted(object arg) {
            if ((this.GetAsRunEvents5Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAsRunEvents5Completed(this, new GetAsRunEvents5CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCCFiles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CCFile[] GetCCFiles(string network, string feed, System.DateTime eventStartDateTime, System.DateTime eventEndDateTime, bool includeCCEvents) {
            object[] results = this.Invoke("GetCCFiles", new object[] {
                        network,
                        feed,
                        eventStartDateTime,
                        eventEndDateTime,
                        includeCCEvents});
            return ((CCFile[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCCFilesAsync(string network, string feed, System.DateTime eventStartDateTime, System.DateTime eventEndDateTime, bool includeCCEvents) {
            this.GetCCFilesAsync(network, feed, eventStartDateTime, eventEndDateTime, includeCCEvents, null);
        }
        
        /// <remarks/>
        public void GetCCFilesAsync(string network, string feed, System.DateTime eventStartDateTime, System.DateTime eventEndDateTime, bool includeCCEvents, object userState) {
            if ((this.GetCCFilesOperationCompleted == null)) {
                this.GetCCFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCCFilesOperationCompleted);
            }
            this.InvokeAsync("GetCCFiles", new object[] {
                        network,
                        feed,
                        eventStartDateTime,
                        eventEndDateTime,
                        includeCCEvents}, this.GetCCFilesOperationCompleted, userState);
        }
        
        private void OnGetCCFilesOperationCompleted(object arg) {
            if ((this.GetCCFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCCFilesCompleted(this, new GetCCFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCCEvents", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CCEvent[] GetCCEvents(string network, string feed, System.DateTime eventDate) {
            object[] results = this.Invoke("GetCCEvents", new object[] {
                        network,
                        feed,
                        eventDate});
            return ((CCEvent[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCCEventsAsync(string network, string feed, System.DateTime eventDate) {
            this.GetCCEventsAsync(network, feed, eventDate, null);
        }
        
        /// <remarks/>
        public void GetCCEventsAsync(string network, string feed, System.DateTime eventDate, object userState) {
            if ((this.GetCCEventsOperationCompleted == null)) {
                this.GetCCEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCCEventsOperationCompleted);
            }
            this.InvokeAsync("GetCCEvents", new object[] {
                        network,
                        feed,
                        eventDate}, this.GetCCEventsOperationCompleted, userState);
        }
        
        private void OnGetCCEventsOperationCompleted(object arg) {
            if ((this.GetCCEventsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCCEventsCompleted(this, new GetCCEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetCCEvents1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCCEventsRange", RequestElementName="GetCCEventsRange", RequestNamespace="http://tempuri.org/", ResponseElementName="GetCCEventsRangeResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetCCEventsRangeResult")]
        public CCEvent[] GetCCEvents(string network, string feed, System.DateTime eventStartDateTime, System.DateTime eventEndDateTime) {
            object[] results = this.Invoke("GetCCEvents1", new object[] {
                        network,
                        feed,
                        eventStartDateTime,
                        eventEndDateTime});
            return ((CCEvent[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCCEvents1Async(string network, string feed, System.DateTime eventStartDateTime, System.DateTime eventEndDateTime) {
            this.GetCCEvents1Async(network, feed, eventStartDateTime, eventEndDateTime, null);
        }
        
        /// <remarks/>
        public void GetCCEvents1Async(string network, string feed, System.DateTime eventStartDateTime, System.DateTime eventEndDateTime, object userState) {
            if ((this.GetCCEvents1OperationCompleted == null)) {
                this.GetCCEvents1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCCEvents1OperationCompleted);
            }
            this.InvokeAsync("GetCCEvents1", new object[] {
                        network,
                        feed,
                        eventStartDateTime,
                        eventEndDateTime}, this.GetCCEvents1OperationCompleted, userState);
        }
        
        private void OnGetCCEvents1OperationCompleted(object arg) {
            if ((this.GetCCEvents1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCCEvents1Completed(this, new GetCCEvents1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemsIngestedIntoBIM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Item[] GetItemsIngestedIntoBIM(System.DateTime ingestedStartDate, System.DateTime ingestedEndDate) {
            object[] results = this.Invoke("GetItemsIngestedIntoBIM", new object[] {
                        ingestedStartDate,
                        ingestedEndDate});
            return ((Item[])(results[0]));
        }
        
        /// <remarks/>
        public void GetItemsIngestedIntoBIMAsync(System.DateTime ingestedStartDate, System.DateTime ingestedEndDate) {
            this.GetItemsIngestedIntoBIMAsync(ingestedStartDate, ingestedEndDate, null);
        }
        
        /// <remarks/>
        public void GetItemsIngestedIntoBIMAsync(System.DateTime ingestedStartDate, System.DateTime ingestedEndDate, object userState) {
            if ((this.GetItemsIngestedIntoBIMOperationCompleted == null)) {
                this.GetItemsIngestedIntoBIMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemsIngestedIntoBIMOperationCompleted);
            }
            this.InvokeAsync("GetItemsIngestedIntoBIM", new object[] {
                        ingestedStartDate,
                        ingestedEndDate}, this.GetItemsIngestedIntoBIMOperationCompleted, userState);
        }
        
        private void OnGetItemsIngestedIntoBIMOperationCompleted(object arg) {
            if ((this.GetItemsIngestedIntoBIMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemsIngestedIntoBIMCompleted(this, new GetItemsIngestedIntoBIMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInstancesIngestedIntoBIM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Instance[] GetInstancesIngestedIntoBIM(string[] materialIds) {
            object[] results = this.Invoke("GetInstancesIngestedIntoBIM", new object[] {
                        materialIds});
            return ((Instance[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInstancesIngestedIntoBIMAsync(string[] materialIds) {
            this.GetInstancesIngestedIntoBIMAsync(materialIds, null);
        }
        
        /// <remarks/>
        public void GetInstancesIngestedIntoBIMAsync(string[] materialIds, object userState) {
            if ((this.GetInstancesIngestedIntoBIMOperationCompleted == null)) {
                this.GetInstancesIngestedIntoBIMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstancesIngestedIntoBIMOperationCompleted);
            }
            this.InvokeAsync("GetInstancesIngestedIntoBIM", new object[] {
                        materialIds}, this.GetInstancesIngestedIntoBIMOperationCompleted, userState);
        }
        
        private void OnGetInstancesIngestedIntoBIMOperationCompleted(object arg) {
            if ((this.GetInstancesIngestedIntoBIMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstancesIngestedIntoBIMCompleted(this, new GetInstancesIngestedIntoBIMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetInstancesIngestedIntoBIM1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInstancesIngestedIntoBIM-Single", RequestElementName="GetInstancesIngestedIntoBIM-Single", RequestNamespace="http://tempuri.org/", ResponseElementName="GetInstancesIngestedIntoBIM-SingleResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetInstancesIngestedIntoBIM-SingleResult")]
        public Instance[] GetInstancesIngestedIntoBIM(string materialId) {
            object[] results = this.Invoke("GetInstancesIngestedIntoBIM1", new object[] {
                        materialId});
            return ((Instance[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInstancesIngestedIntoBIM1Async(string materialId) {
            this.GetInstancesIngestedIntoBIM1Async(materialId, null);
        }
        
        /// <remarks/>
        public void GetInstancesIngestedIntoBIM1Async(string materialId, object userState) {
            if ((this.GetInstancesIngestedIntoBIM1OperationCompleted == null)) {
                this.GetInstancesIngestedIntoBIM1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstancesIngestedIntoBIM1OperationCompleted);
            }
            this.InvokeAsync("GetInstancesIngestedIntoBIM1", new object[] {
                        materialId}, this.GetInstancesIngestedIntoBIM1OperationCompleted, userState);
        }
        
        private void OnGetInstancesIngestedIntoBIM1OperationCompleted(object arg) {
            if ((this.GetInstancesIngestedIntoBIM1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstancesIngestedIntoBIM1Completed(this, new GetInstancesIngestedIntoBIM1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInstancesIngestedIntoBIMNoFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Instance[] GetInstancesIngestedIntoBIMNoFilter(string[] materialIds) {
            object[] results = this.Invoke("GetInstancesIngestedIntoBIMNoFilter", new object[] {
                        materialIds});
            return ((Instance[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInstancesIngestedIntoBIMNoFilterAsync(string[] materialIds) {
            this.GetInstancesIngestedIntoBIMNoFilterAsync(materialIds, null);
        }
        
        /// <remarks/>
        public void GetInstancesIngestedIntoBIMNoFilterAsync(string[] materialIds, object userState) {
            if ((this.GetInstancesIngestedIntoBIMNoFilterOperationCompleted == null)) {
                this.GetInstancesIngestedIntoBIMNoFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstancesIngestedIntoBIMNoFilterOperationCompleted);
            }
            this.InvokeAsync("GetInstancesIngestedIntoBIMNoFilter", new object[] {
                        materialIds}, this.GetInstancesIngestedIntoBIMNoFilterOperationCompleted, userState);
        }
        
        private void OnGetInstancesIngestedIntoBIMNoFilterOperationCompleted(object arg) {
            if ((this.GetInstancesIngestedIntoBIMNoFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstancesIngestedIntoBIMNoFilterCompleted(this, new GetInstancesIngestedIntoBIMNoFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SystemCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SystemCheck() {
            object[] results = this.Invoke("SystemCheck", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SystemCheckAsync() {
            this.SystemCheckAsync(null);
        }
        
        /// <remarks/>
        public void SystemCheckAsync(object userState) {
            if ((this.SystemCheckOperationCompleted == null)) {
                this.SystemCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSystemCheckOperationCompleted);
            }
            this.InvokeAsync("SystemCheck", new object[0], this.SystemCheckOperationCompleted, userState);
        }
        
        private void OnSystemCheckOperationCompleted(object arg) {
            if ((this.SystemCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SystemCheckCompleted(this, new SystemCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBIMRecordByDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BIMToolRecord[] GetBIMRecordByDate(System.DateTime ingestedStartDate, System.DateTime ingestedEndDate) {
            object[] results = this.Invoke("GetBIMRecordByDate", new object[] {
                        ingestedStartDate,
                        ingestedEndDate});
            return ((BIMToolRecord[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBIMRecordByDateAsync(System.DateTime ingestedStartDate, System.DateTime ingestedEndDate) {
            this.GetBIMRecordByDateAsync(ingestedStartDate, ingestedEndDate, null);
        }
        
        /// <remarks/>
        public void GetBIMRecordByDateAsync(System.DateTime ingestedStartDate, System.DateTime ingestedEndDate, object userState) {
            if ((this.GetBIMRecordByDateOperationCompleted == null)) {
                this.GetBIMRecordByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBIMRecordByDateOperationCompleted);
            }
            this.InvokeAsync("GetBIMRecordByDate", new object[] {
                        ingestedStartDate,
                        ingestedEndDate}, this.GetBIMRecordByDateOperationCompleted, userState);
        }
        
        private void OnGetBIMRecordByDateOperationCompleted(object arg) {
            if ((this.GetBIMRecordByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBIMRecordByDateCompleted(this, new GetBIMRecordByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBIMRecordByMaterialId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BIMToolRecord[] GetBIMRecordByMaterialId(string materialId) {
            object[] results = this.Invoke("GetBIMRecordByMaterialId", new object[] {
                        materialId});
            return ((BIMToolRecord[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBIMRecordByMaterialIdAsync(string materialId) {
            this.GetBIMRecordByMaterialIdAsync(materialId, null);
        }
        
        /// <remarks/>
        public void GetBIMRecordByMaterialIdAsync(string materialId, object userState) {
            if ((this.GetBIMRecordByMaterialIdOperationCompleted == null)) {
                this.GetBIMRecordByMaterialIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBIMRecordByMaterialIdOperationCompleted);
            }
            this.InvokeAsync("GetBIMRecordByMaterialId", new object[] {
                        materialId}, this.GetBIMRecordByMaterialIdOperationCompleted, userState);
        }
        
        private void OnGetBIMRecordByMaterialIdOperationCompleted(object arg) {
            if ((this.GetBIMRecordByMaterialIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBIMRecordByMaterialIdCompleted(this, new GetBIMRecordByMaterialIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBIMRecordByMaterialIds", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BIMToolRecord[] GetBIMRecordByMaterialIds(string[] materialIds) {
            object[] results = this.Invoke("GetBIMRecordByMaterialIds", new object[] {
                        materialIds});
            return ((BIMToolRecord[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBIMRecordByMaterialIdsAsync(string[] materialIds) {
            this.GetBIMRecordByMaterialIdsAsync(materialIds, null);
        }
        
        /// <remarks/>
        public void GetBIMRecordByMaterialIdsAsync(string[] materialIds, object userState) {
            if ((this.GetBIMRecordByMaterialIdsOperationCompleted == null)) {
                this.GetBIMRecordByMaterialIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBIMRecordByMaterialIdsOperationCompleted);
            }
            this.InvokeAsync("GetBIMRecordByMaterialIds", new object[] {
                        materialIds}, this.GetBIMRecordByMaterialIdsOperationCompleted, userState);
        }
        
        private void OnGetBIMRecordByMaterialIdsOperationCompleted(object arg) {
            if ((this.GetBIMRecordByMaterialIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBIMRecordByMaterialIdsCompleted(this, new GetBIMRecordByMaterialIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MediaExistsInBIMResult {
        
        private string materialIdField;
        
        private bool existsInBIMField;
        
        /// <remarks/>
        public string MaterialId {
            get {
                return this.materialIdField;
            }
            set {
                this.materialIdField = value;
            }
        }
        
        /// <remarks/>
        public bool ExistsInBIM {
            get {
                return this.existsInBIMField;
            }
            set {
                this.existsInBIMField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BIMToolRecord {
        
        private string materialIdField;
        
        private string titleField;
        
        private int onAirDurationField;
        
        private int runOnDurationField;
        
        private string subtitleReferenceField;
        
        private string notesField;
        
        private string ingestedByField;
        
        private System.Nullable<System.DateTime> ingestedDateField;
        
        private string statusField;
        
        private string episodeNumberField;
        
        private int numberOfTapesField;
        
        private string aspectRatioField;
        
        private MaterialType materialTypeField;
        
        private int timeCodeInField;
        
        private int timeCodeOutField;
        
        private string vITCField;
        
        private string lTCField;
        
        private string videoCompressionField;
        
        private string audioModeField;
        
        private int audioSampleRateField;
        
        private string audioCompressionField;
        
        private int runOnField;
        
        /// <remarks/>
        public string MaterialId {
            get {
                return this.materialIdField;
            }
            set {
                this.materialIdField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public int OnAirDuration {
            get {
                return this.onAirDurationField;
            }
            set {
                this.onAirDurationField = value;
            }
        }
        
        /// <remarks/>
        public int RunOnDuration {
            get {
                return this.runOnDurationField;
            }
            set {
                this.runOnDurationField = value;
            }
        }
        
        /// <remarks/>
        public string SubtitleReference {
            get {
                return this.subtitleReferenceField;
            }
            set {
                this.subtitleReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public string IngestedBy {
            get {
                return this.ingestedByField;
            }
            set {
                this.ingestedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> IngestedDate {
            get {
                return this.ingestedDateField;
            }
            set {
                this.ingestedDateField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string EpisodeNumber {
            get {
                return this.episodeNumberField;
            }
            set {
                this.episodeNumberField = value;
            }
        }
        
        /// <remarks/>
        public int NumberOfTapes {
            get {
                return this.numberOfTapesField;
            }
            set {
                this.numberOfTapesField = value;
            }
        }
        
        /// <remarks/>
        public string AspectRatio {
            get {
                return this.aspectRatioField;
            }
            set {
                this.aspectRatioField = value;
            }
        }
        
        /// <remarks/>
        public MaterialType MaterialType {
            get {
                return this.materialTypeField;
            }
            set {
                this.materialTypeField = value;
            }
        }
        
        /// <remarks/>
        public int TimeCodeIn {
            get {
                return this.timeCodeInField;
            }
            set {
                this.timeCodeInField = value;
            }
        }
        
        /// <remarks/>
        public int TimeCodeOut {
            get {
                return this.timeCodeOutField;
            }
            set {
                this.timeCodeOutField = value;
            }
        }
        
        /// <remarks/>
        public string VITC {
            get {
                return this.vITCField;
            }
            set {
                this.vITCField = value;
            }
        }
        
        /// <remarks/>
        public string LTC {
            get {
                return this.lTCField;
            }
            set {
                this.lTCField = value;
            }
        }
        
        /// <remarks/>
        public string VideoCompression {
            get {
                return this.videoCompressionField;
            }
            set {
                this.videoCompressionField = value;
            }
        }
        
        /// <remarks/>
        public string AudioMode {
            get {
                return this.audioModeField;
            }
            set {
                this.audioModeField = value;
            }
        }
        
        /// <remarks/>
        public int AudioSampleRate {
            get {
                return this.audioSampleRateField;
            }
            set {
                this.audioSampleRateField = value;
            }
        }
        
        /// <remarks/>
        public string AudioCompression {
            get {
                return this.audioCompressionField;
            }
            set {
                this.audioCompressionField = value;
            }
        }
        
        /// <remarks/>
        public int RunOn {
            get {
                return this.runOnField;
            }
            set {
                this.runOnField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum MaterialType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Programme,
        
        /// <remarks/>
        Commercial,
        
        /// <remarks/>
        CommercialBreakHeader,
        
        /// <remarks/>
        CommercialBreakItem,
        
        /// <remarks/>
        Junction,
        
        /// <remarks/>
        Live,
        
        /// <remarks/>
        CommercialBreakOptOutHeader,
        
        /// <remarks/>
        RegionalBreakOptOutHeader,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Instance {
        
        private string materialIdField;
        
        private string titleField;
        
        private int onAirDurationField;
        
        private int runOnDurationField;
        
        private string subtitleReferenceField;
        
        private string notesField;
        
        private string ingestedByField;
        
        private System.DateTime ingestedDateField;
        
        private string statusField;
        
        private string episodeNumberField;
        
        private int numberOfTapesField;
        
        private string aspectRatioField;
        
        private MaterialType materialTypeField;
        
        private int timeCodeInField;
        
        private int timeCodeOutField;
        
        private string vITCField;
        
        private string lTCField;
        
        private string videoCompressionField;
        
        private string audioModeField;
        
        private int audioSampleRateField;
        
        private string audioCompressionField;
        
        private int runOnField;
        
        private string longFileIdField;
        
        private System.Nullable<int> encodedField;
        
        /// <remarks/>
        public string MaterialId {
            get {
                return this.materialIdField;
            }
            set {
                this.materialIdField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public int OnAirDuration {
            get {
                return this.onAirDurationField;
            }
            set {
                this.onAirDurationField = value;
            }
        }
        
        /// <remarks/>
        public int RunOnDuration {
            get {
                return this.runOnDurationField;
            }
            set {
                this.runOnDurationField = value;
            }
        }
        
        /// <remarks/>
        public string SubtitleReference {
            get {
                return this.subtitleReferenceField;
            }
            set {
                this.subtitleReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public string IngestedBy {
            get {
                return this.ingestedByField;
            }
            set {
                this.ingestedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime IngestedDate {
            get {
                return this.ingestedDateField;
            }
            set {
                this.ingestedDateField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string EpisodeNumber {
            get {
                return this.episodeNumberField;
            }
            set {
                this.episodeNumberField = value;
            }
        }
        
        /// <remarks/>
        public int NumberOfTapes {
            get {
                return this.numberOfTapesField;
            }
            set {
                this.numberOfTapesField = value;
            }
        }
        
        /// <remarks/>
        public string AspectRatio {
            get {
                return this.aspectRatioField;
            }
            set {
                this.aspectRatioField = value;
            }
        }
        
        /// <remarks/>
        public MaterialType MaterialType {
            get {
                return this.materialTypeField;
            }
            set {
                this.materialTypeField = value;
            }
        }
        
        /// <remarks/>
        public int TimeCodeIn {
            get {
                return this.timeCodeInField;
            }
            set {
                this.timeCodeInField = value;
            }
        }
        
        /// <remarks/>
        public int TimeCodeOut {
            get {
                return this.timeCodeOutField;
            }
            set {
                this.timeCodeOutField = value;
            }
        }
        
        /// <remarks/>
        public string VITC {
            get {
                return this.vITCField;
            }
            set {
                this.vITCField = value;
            }
        }
        
        /// <remarks/>
        public string LTC {
            get {
                return this.lTCField;
            }
            set {
                this.lTCField = value;
            }
        }
        
        /// <remarks/>
        public string VideoCompression {
            get {
                return this.videoCompressionField;
            }
            set {
                this.videoCompressionField = value;
            }
        }
        
        /// <remarks/>
        public string AudioMode {
            get {
                return this.audioModeField;
            }
            set {
                this.audioModeField = value;
            }
        }
        
        /// <remarks/>
        public int AudioSampleRate {
            get {
                return this.audioSampleRateField;
            }
            set {
                this.audioSampleRateField = value;
            }
        }
        
        /// <remarks/>
        public string AudioCompression {
            get {
                return this.audioCompressionField;
            }
            set {
                this.audioCompressionField = value;
            }
        }
        
        /// <remarks/>
        public int RunOn {
            get {
                return this.runOnField;
            }
            set {
                this.runOnField = value;
            }
        }
        
        /// <remarks/>
        public string LongFileId {
            get {
                return this.longFileIdField;
            }
            set {
                this.longFileIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Encoded {
            get {
                return this.encodedField;
            }
            set {
                this.encodedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Item {
        
        private string materialIdField;
        
        private string titleField;
        
        private MaterialType materialTypeField;
        
        private string notesField;
        
        private string ingestedByField;
        
        private System.DateTime ingestedDateField;
        
        /// <remarks/>
        public string MaterialId {
            get {
                return this.materialIdField;
            }
            set {
                this.materialIdField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public MaterialType MaterialType {
            get {
                return this.materialTypeField;
            }
            set {
                this.materialTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public string IngestedBy {
            get {
                return this.ingestedByField;
            }
            set {
                this.ingestedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime IngestedDate {
            get {
                return this.ingestedDateField;
            }
            set {
                this.ingestedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CCEvent {
        
        private int cCFileIDField;
        
        private string captionStreamField;
        
        private System.DateTime createdDateTimeField;
        
        private string createdUserNameField;
        
        private string displayMethodField;
        
        private string feedField;
        
        private System.DateTime modifiedDateTimeField;
        
        private string modifiedUserNameField;
        
        private string networkField;
        
        private System.DateTime startDateTimeField;
        
        private string transmittedTextField;
        
        /// <remarks/>
        public int CCFileID {
            get {
                return this.cCFileIDField;
            }
            set {
                this.cCFileIDField = value;
            }
        }
        
        /// <remarks/>
        public string CaptionStream {
            get {
                return this.captionStreamField;
            }
            set {
                this.captionStreamField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedDateTime {
            get {
                return this.createdDateTimeField;
            }
            set {
                this.createdDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedUserName {
            get {
                return this.createdUserNameField;
            }
            set {
                this.createdUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayMethod {
            get {
                return this.displayMethodField;
            }
            set {
                this.displayMethodField = value;
            }
        }
        
        /// <remarks/>
        public string Feed {
            get {
                return this.feedField;
            }
            set {
                this.feedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDateTime {
            get {
                return this.modifiedDateTimeField;
            }
            set {
                this.modifiedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string ModifiedUserName {
            get {
                return this.modifiedUserNameField;
            }
            set {
                this.modifiedUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string Network {
            get {
                return this.networkField;
            }
            set {
                this.networkField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDateTime {
            get {
                return this.startDateTimeField;
            }
            set {
                this.startDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string TransmittedText {
            get {
                return this.transmittedTextField;
            }
            set {
                this.transmittedTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CCFile {
        
        private int idField;
        
        private System.DateTime createdDateTimeField;
        
        private string createdUserNameField;
        
        private System.DateTime eventEndDateTimeField;
        
        private System.DateTime eventStartDateTimeField;
        
        private string feedField;
        
        private string fileNameField;
        
        private System.DateTime fileNameModifiedDateTimeField;
        
        private System.DateTime modifiedDateTimeField;
        
        private string modifiedUserNameField;
        
        private string networkField;
        
        private CCEvent[] cCEventsField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedDateTime {
            get {
                return this.createdDateTimeField;
            }
            set {
                this.createdDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedUserName {
            get {
                return this.createdUserNameField;
            }
            set {
                this.createdUserNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EventEndDateTime {
            get {
                return this.eventEndDateTimeField;
            }
            set {
                this.eventEndDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EventStartDateTime {
            get {
                return this.eventStartDateTimeField;
            }
            set {
                this.eventStartDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Feed {
            get {
                return this.feedField;
            }
            set {
                this.feedField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime FileNameModifiedDateTime {
            get {
                return this.fileNameModifiedDateTimeField;
            }
            set {
                this.fileNameModifiedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDateTime {
            get {
                return this.modifiedDateTimeField;
            }
            set {
                this.modifiedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string ModifiedUserName {
            get {
                return this.modifiedUserNameField;
            }
            set {
                this.modifiedUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string Network {
            get {
                return this.networkField;
            }
            set {
                this.networkField = value;
            }
        }
        
        /// <remarks/>
        public CCEvent[] CCEvents {
            get {
                return this.cCEventsField;
            }
            set {
                this.cCEventsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AsRunEvent {
        
        private string audioField;
        
        private string commentField;
        
        private System.DateTime createdDateTimeField;
        
        private string createdUserNameField;
        
        private int durationField;
        
        private string eventNumberField;
        
        private string feedField;
        
        private string materialIdField;
        
        private string contentIdField;
        
        private AsRunEventMaterialType materialTypeField;
        
        private System.DateTime modifiedDateTimeField;
        
        private string modifiedUserNameField;
        
        private string networkField;
        
        private string noteField;
        
        private System.DateTime startDateTimeField;
        
        private AsRunEventStartMode startModeField;
        
        private string titleField;
        
        private string videoField;
        
        private string videoDeviceIdField;
        
        /// <remarks/>
        public string Audio {
            get {
                return this.audioField;
            }
            set {
                this.audioField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedDateTime {
            get {
                return this.createdDateTimeField;
            }
            set {
                this.createdDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedUserName {
            get {
                return this.createdUserNameField;
            }
            set {
                this.createdUserNameField = value;
            }
        }
        
        /// <remarks/>
        public int Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        public string EventNumber {
            get {
                return this.eventNumberField;
            }
            set {
                this.eventNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Feed {
            get {
                return this.feedField;
            }
            set {
                this.feedField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialId {
            get {
                return this.materialIdField;
            }
            set {
                this.materialIdField = value;
            }
        }
        
        /// <remarks/>
        public string ContentId {
            get {
                return this.contentIdField;
            }
            set {
                this.contentIdField = value;
            }
        }
        
        /// <remarks/>
        public AsRunEventMaterialType MaterialType {
            get {
                return this.materialTypeField;
            }
            set {
                this.materialTypeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDateTime {
            get {
                return this.modifiedDateTimeField;
            }
            set {
                this.modifiedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string ModifiedUserName {
            get {
                return this.modifiedUserNameField;
            }
            set {
                this.modifiedUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string Network {
            get {
                return this.networkField;
            }
            set {
                this.networkField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDateTime {
            get {
                return this.startDateTimeField;
            }
            set {
                this.startDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public AsRunEventStartMode StartMode {
            get {
                return this.startModeField;
            }
            set {
                this.startModeField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Video {
            get {
                return this.videoField;
            }
            set {
                this.videoField = value;
            }
        }
        
        /// <remarks/>
        public string VideoDeviceId {
            get {
                return this.videoDeviceIdField;
            }
            set {
                this.videoDeviceIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum AsRunEventMaterialType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Programme,
        
        /// <remarks/>
        CommercialBreakHeader,
        
        /// <remarks/>
        CommercialBreakItem,
        
        /// <remarks/>
        Junction,
        
        /// <remarks/>
        Live,
        
        /// <remarks/>
        CommercialBreakOptOutHeader,
        
        /// <remarks/>
        RegionalBreakOptOutHeader,
        
        /// <remarks/>
        Commercial,
        
        /// <remarks/>
        LiveRecord,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum AsRunEventStartMode {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Fixed,
        
        /// <remarks/>
        Variable,
        
        /// <remarks/>
        Manual,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AsRun {
        
        private System.DateTime createdDateTimeField;
        
        private string createdUserNameField;
        
        private System.DateTime eventEndDateTimeField;
        
        private System.DateTime eventStartDateTimeField;
        
        private string feedField;
        
        private string fileNameField;
        
        private System.DateTime fileNameModifiedDateTimeField;
        
        private System.DateTime modifiedDateTimeField;
        
        private string modifiedUserNameField;
        
        private string networkField;
        
        private AsRunEvent[] asRunEventsField;
        
        /// <remarks/>
        public System.DateTime CreatedDateTime {
            get {
                return this.createdDateTimeField;
            }
            set {
                this.createdDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedUserName {
            get {
                return this.createdUserNameField;
            }
            set {
                this.createdUserNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EventEndDateTime {
            get {
                return this.eventEndDateTimeField;
            }
            set {
                this.eventEndDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EventStartDateTime {
            get {
                return this.eventStartDateTimeField;
            }
            set {
                this.eventStartDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Feed {
            get {
                return this.feedField;
            }
            set {
                this.feedField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime FileNameModifiedDateTime {
            get {
                return this.fileNameModifiedDateTimeField;
            }
            set {
                this.fileNameModifiedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDateTime {
            get {
                return this.modifiedDateTimeField;
            }
            set {
                this.modifiedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string ModifiedUserName {
            get {
                return this.modifiedUserNameField;
            }
            set {
                this.modifiedUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string Network {
            get {
                return this.networkField;
            }
            set {
                this.networkField = value;
            }
        }
        
        /// <remarks/>
        public AsRunEvent[] AsRunEvents {
            get {
                return this.asRunEventsField;
            }
            set {
                this.asRunEventsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BimMediaPodInstance {
        
        private string pathField;
        
        private string referenceNameField;
        
        private string qualityReviewerField;
        
        private string qualityCheckTimeStampField;
        
        private string playlistNameField;
        
        private bool isLockedField;
        
        /// <remarks/>
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        public string ReferenceName {
            get {
                return this.referenceNameField;
            }
            set {
                this.referenceNameField = value;
            }
        }
        
        /// <remarks/>
        public string QualityReviewer {
            get {
                return this.qualityReviewerField;
            }
            set {
                this.qualityReviewerField = value;
            }
        }
        
        /// <remarks/>
        public string QualityCheckTimeStamp {
            get {
                return this.qualityCheckTimeStampField;
            }
            set {
                this.qualityCheckTimeStampField = value;
            }
        }
        
        /// <remarks/>
        public string PlaylistName {
            get {
                return this.playlistNameField;
            }
            set {
                this.playlistNameField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLocked {
            get {
                return this.isLockedField;
            }
            set {
                this.isLockedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class NetworkPodSummary {
        
        private string networkPodNameField;
        
        private string contentIdField;
        
        private BimMediaPodInstance[] instancesField;
        
        /// <remarks/>
        public string NetworkPodName {
            get {
                return this.networkPodNameField;
            }
            set {
                this.networkPodNameField = value;
            }
        }
        
        /// <remarks/>
        public string ContentId {
            get {
                return this.contentIdField;
            }
            set {
                this.contentIdField = value;
            }
        }
        
        /// <remarks/>
        public BimMediaPodInstance[] Instances {
            get {
                return this.instancesField;
            }
            set {
                this.instancesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MessageSet {
        
        private string contentIDField;
        
        private bool hasBeenQualityCheckedField;
        
        private BimStatus hasItemsInBimField;
        
        private NetworkPodSummary[] networkPodsWithMediaField;
        
        private string[] networkPodsWithoutMediaField;
        
        /// <remarks/>
        public string ContentID {
            get {
                return this.contentIDField;
            }
            set {
                this.contentIDField = value;
            }
        }
        
        /// <remarks/>
        public bool HasBeenQualityChecked {
            get {
                return this.hasBeenQualityCheckedField;
            }
            set {
                this.hasBeenQualityCheckedField = value;
            }
        }
        
        /// <remarks/>
        public BimStatus HasItemsInBim {
            get {
                return this.hasItemsInBimField;
            }
            set {
                this.hasItemsInBimField = value;
            }
        }
        
        /// <remarks/>
        public NetworkPodSummary[] NetworkPodsWithMedia {
            get {
                return this.networkPodsWithMediaField;
            }
            set {
                this.networkPodsWithMediaField = value;
            }
        }
        
        /// <remarks/>
        public string[] NetworkPodsWithoutMedia {
            get {
                return this.networkPodsWithoutMediaField;
            }
            set {
                this.networkPodsWithoutMediaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum BimStatus {
        
        /// <remarks/>
        InBim,
        
        /// <remarks/>
        NotInBim,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BIMKill {
        
        private string failureReasonField;
        
        private bool isCompletedField;
        
        private bool isKilledField;
        
        private int completedRequestsField;
        
        private System.DateTime requestedOnField;
        
        private string materialIdField;
        
        private string commentField;
        
        private bool unConfirmedField;
        
        /// <remarks/>
        public string FailureReason {
            get {
                return this.failureReasonField;
            }
            set {
                this.failureReasonField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCompleted {
            get {
                return this.isCompletedField;
            }
            set {
                this.isCompletedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsKilled {
            get {
                return this.isKilledField;
            }
            set {
                this.isKilledField = value;
            }
        }
        
        /// <remarks/>
        public int CompletedRequests {
            get {
                return this.completedRequestsField;
            }
            set {
                this.completedRequestsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RequestedOn {
            get {
                return this.requestedOnField;
            }
            set {
                this.requestedOnField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialId {
            get {
                return this.materialIdField;
            }
            set {
                this.materialIdField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public bool UnConfirmed {
            get {
                return this.unConfirmedField;
            }
            set {
                this.unConfirmedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaskResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MediaKilledInBIMServiceResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MediaExistsInBIMServiceResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TaskBase {
        
        private int taskIdField;
        
        private TaskStatusType statusField;
        
        private string commentField;
        
        private string errorsField;
        
        private string createdByField;
        
        private System.DateTime createdOnField;
        
        private string lastUpdatedByField;
        
        private System.DateTime lastUpdatedOnField;
        
        private bool isDeliveredField;
        
        /// <remarks/>
        public int TaskId {
            get {
                return this.taskIdField;
            }
            set {
                this.taskIdField = value;
            }
        }
        
        /// <remarks/>
        public TaskStatusType Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedOn {
            get {
                return this.createdOnField;
            }
            set {
                this.createdOnField = value;
            }
        }
        
        /// <remarks/>
        public string LastUpdatedBy {
            get {
                return this.lastUpdatedByField;
            }
            set {
                this.lastUpdatedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdatedOn {
            get {
                return this.lastUpdatedOnField;
            }
            set {
                this.lastUpdatedOnField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDelivered {
            get {
                return this.isDeliveredField;
            }
            set {
                this.isDeliveredField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum TaskStatusType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        New,
        
        /// <remarks/>
        Submitted,
        
        /// <remarks/>
        Completed,
        
        /// <remarks/>
        Cancelled,
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Scheduled,
        
        /// <remarks/>
        Cancel,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MediaKilledInBIMServiceResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MediaExistsInBIMServiceResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TaskResult : TaskBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MediaKilledInBIMServiceResult : TaskResult {
        
        private BIMKill[] resultField;
        
        /// <remarks/>
        public BIMKill[] Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MediaExistsInBIMServiceResult : TaskResult {
        
        private MediaExistsInBIMResult[] resultField;
        
        /// <remarks/>
        public MediaExistsInBIMResult[] Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CQCIngestRecordExistsInBIMResult {
        
        private string materialIDField;
        
        private string deviceIDField;
        
        private System.DateTime recordedDateField;
        
        private bool encodedField;
        
        private bool existsField;
        
        /// <remarks/>
        public string MaterialID {
            get {
                return this.materialIDField;
            }
            set {
                this.materialIDField = value;
            }
        }
        
        /// <remarks/>
        public string DeviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RecordedDate {
            get {
                return this.recordedDateField;
            }
            set {
                this.recordedDateField = value;
            }
        }
        
        /// <remarks/>
        public bool Encoded {
            get {
                return this.encodedField;
            }
            set {
                this.encodedField = value;
            }
        }
        
        /// <remarks/>
        public bool Exists {
            get {
                return this.existsField;
            }
            set {
                this.existsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class IngestRecordExistsInBIMResult {
        
        private string materialIDField;
        
        private string deviceIDField;
        
        private bool existsField;
        
        /// <remarks/>
        public string MaterialID {
            get {
                return this.materialIDField;
            }
            set {
                this.materialIDField = value;
            }
        }
        
        /// <remarks/>
        public string DeviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
            }
        }
        
        /// <remarks/>
        public bool Exists {
            get {
                return this.existsField;
            }
            set {
                this.existsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void VersionPingCompletedEventHandler(object sender, VersionPingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VersionPingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VersionPingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MediaExistsInBIMCompletedEventHandler(object sender, MediaExistsInBIMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MediaExistsInBIMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MediaExistsInBIMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaExistsInBIMResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaExistsInBIMResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MediaExistsInBIM1CompletedEventHandler(object sender, MediaExistsInBIM1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MediaExistsInBIM1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MediaExistsInBIM1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaExistsInBIMResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaExistsInBIMResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void IngestRecordExistsInBIMCompletedEventHandler(object sender, IngestRecordExistsInBIMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IngestRecordExistsInBIMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IngestRecordExistsInBIMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IngestRecordExistsInBIMResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IngestRecordExistsInBIMResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CQCIngestRecordExistsInBIMCompletedEventHandler(object sender, CQCIngestRecordExistsInBIMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CQCIngestRecordExistsInBIMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CQCIngestRecordExistsInBIMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CQCIngestRecordExistsInBIMResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CQCIngestRecordExistsInBIMResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MediaExistsInBIM2CompletedEventHandler(object sender, MediaExistsInBIM2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MediaExistsInBIM2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MediaExistsInBIM2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MediaExistsInBIM3CompletedEventHandler(object sender, MediaExistsInBIM3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MediaExistsInBIM3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MediaExistsInBIM3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MediaExistsInBIM4CompletedEventHandler(object sender, MediaExistsInBIM4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MediaExistsInBIM4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MediaExistsInBIM4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MediaExistsInBIM5CompletedEventHandler(object sender, MediaExistsInBIM5CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MediaExistsInBIM5CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MediaExistsInBIM5CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetMediaExistsInBIMResultCompletedEventHandler(object sender, GetMediaExistsInBIMResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediaExistsInBIMResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediaExistsInBIMResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaExistsInBIMServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaExistsInBIMServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MediaKilledInBIMCompletedEventHandler(object sender, MediaKilledInBIMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MediaKilledInBIMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MediaKilledInBIMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MediaKilledInBIM1CompletedEventHandler(object sender, MediaKilledInBIM1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MediaKilledInBIM1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MediaKilledInBIM1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MediaKilledInBIM2CompletedEventHandler(object sender, MediaKilledInBIM2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MediaKilledInBIM2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MediaKilledInBIM2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetMediaKilledInBIMResultCompletedEventHandler(object sender, GetMediaKilledInBIMResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediaKilledInBIMResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediaKilledInBIMResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaKilledInBIMServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaKilledInBIMServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MediaKilledInBIMStatusCompletedEventHandler(object sender, MediaKilledInBIMStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MediaKilledInBIMStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MediaKilledInBIMStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BIMKill[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BIMKill[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetMediaInfoFromPodsCompletedEventHandler(object sender, GetMediaInfoFromPodsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediaInfoFromPodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediaInfoFromPodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageSet[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageSet[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAsRunsCompletedEventHandler(object sender, GetAsRunsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAsRunsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAsRunsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AsRun[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AsRun[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAsRunEventsCompletedEventHandler(object sender, GetAsRunEventsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAsRunEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAsRunEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AsRunEvent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AsRunEvent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAsRunEvents1CompletedEventHandler(object sender, GetAsRunEvents1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAsRunEvents1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAsRunEvents1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AsRunEvent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AsRunEvent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAsRunEvents2CompletedEventHandler(object sender, GetAsRunEvents2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAsRunEvents2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAsRunEvents2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AsRunEvent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AsRunEvent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAsRunEvents3CompletedEventHandler(object sender, GetAsRunEvents3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAsRunEvents3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAsRunEvents3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AsRunEvent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AsRunEvent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAsRunEvents4CompletedEventHandler(object sender, GetAsRunEvents4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAsRunEvents4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAsRunEvents4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AsRunEvent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AsRunEvent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAsRunEvents5CompletedEventHandler(object sender, GetAsRunEvents5CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAsRunEvents5CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAsRunEvents5CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AsRunEvent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AsRunEvent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetCCFilesCompletedEventHandler(object sender, GetCCFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCCFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCCFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CCFile[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CCFile[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetCCEventsCompletedEventHandler(object sender, GetCCEventsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCCEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCCEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CCEvent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CCEvent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetCCEvents1CompletedEventHandler(object sender, GetCCEvents1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCCEvents1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCCEvents1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CCEvent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CCEvent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetItemsIngestedIntoBIMCompletedEventHandler(object sender, GetItemsIngestedIntoBIMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemsIngestedIntoBIMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemsIngestedIntoBIMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Item[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Item[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetInstancesIngestedIntoBIMCompletedEventHandler(object sender, GetInstancesIngestedIntoBIMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInstancesIngestedIntoBIMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInstancesIngestedIntoBIMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Instance[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Instance[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetInstancesIngestedIntoBIM1CompletedEventHandler(object sender, GetInstancesIngestedIntoBIM1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInstancesIngestedIntoBIM1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInstancesIngestedIntoBIM1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Instance[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Instance[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetInstancesIngestedIntoBIMNoFilterCompletedEventHandler(object sender, GetInstancesIngestedIntoBIMNoFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInstancesIngestedIntoBIMNoFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInstancesIngestedIntoBIMNoFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Instance[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Instance[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SystemCheckCompletedEventHandler(object sender, SystemCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SystemCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SystemCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetBIMRecordByDateCompletedEventHandler(object sender, GetBIMRecordByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBIMRecordByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBIMRecordByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BIMToolRecord[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BIMToolRecord[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetBIMRecordByMaterialIdCompletedEventHandler(object sender, GetBIMRecordByMaterialIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBIMRecordByMaterialIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBIMRecordByMaterialIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BIMToolRecord[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BIMToolRecord[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetBIMRecordByMaterialIdsCompletedEventHandler(object sender, GetBIMRecordByMaterialIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBIMRecordByMaterialIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBIMRecordByMaterialIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BIMToolRecord[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BIMToolRecord[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591